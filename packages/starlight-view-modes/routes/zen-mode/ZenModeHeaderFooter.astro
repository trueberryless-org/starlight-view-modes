---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'

import { getCollection } from 'astro:content';
export async function getStaticPaths() {
  const allDocs = await getCollection('docs');
  return allDocs.map((doc) => ({
    params: { path: doc.slug },
    props: { doc },
  }));
}

export const prerender = true

const { doc } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await doc.render();

const { hasSidebar } = remarkPluginFrontmatter
---

<StarlightPage frontmatter={ remarkPluginFrontmatter } headings={headings} {hasSidebar} >
    <Content />
</StarlightPage>

<style is:global>
body {
  --sl-mobile-toc-height: 0rem;
}
nav {
  inset-inline-start: 0;
}
@media (min-width: 50rem) {
  #starlight__sidebar {
    display: none;
  }
}
.right-sidebar-container {
  display: none;
}

.view-modes-zen-mode-template-doc header.header > div {
  grid-template-columns: minmax(calc(var(--__sidebar-width) + var(--__main-column-fr) - var(--sl-nav-gap) / 4), auto) 1fr auto;
}
.view-modes-zen-mode-template-doc main {
  width: calc(100vw - var(--sl-sidebar-pad-x));
}
.view-modes-zen-mode-template-doc main .sl-container {
  margin: 0 auto;
}
.view-modes-zen-mode-template-doc .main-frame {
  padding-inline: 0;
}
</style>

<script define:vars={{ hasSidebar }}>
  if (hasSidebar) {
    document.body.classList.add("view-modes-zen-mode-template-doc");
  } else {
    document.body.classList.add("view-modes-zen-mode-template-splash");
  }
</script>