---
import type { GetStaticPaths } from 'astro';
import { getCollection, render } from 'astro:content';
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import config from 'virtual:starlight-view-modes-config';
import { getClassNameZenMode } from '../libs/utils';

export const getStaticPaths = (async () => {
	const allDocs = await getCollection('docs');
	return allDocs
		.filter((doc: { id: string }) => doc.id !== "index")
		.map((doc: { id: string; }) => ({
			params: { path: doc.id },
			props: { doc },
		}));
}) satisfies GetStaticPaths;

export const prerender = true

const { doc } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await render(doc);

const { hasSidebar } = remarkPluginFrontmatter

const zenModeFileName = getClassNameZenMode(config.zenModeSettings.displayOptions);
import.meta.glob('../styles/zen-mode/*.css')

let classes = [
  zenModeFileName,
  !config.zenModeSettings.displayOptions.showHeader && 'starlight-view-modes-zen-mode-no-header',
  !config.zenModeSettings.displayOptions.showSidebar && 'starlight-view-modes-zen-mode-no-sidebar',
  !config.zenModeSettings.displayOptions.showTableOfContents && 'starlight-view-modes-zen-mode-no-table-of-contents',
  !config.zenModeSettings.displayOptions.showFooter && 'starlight-view-modes-zen-mode-no-footer'
].filter(Boolean);
console.log(classes)
---

<StarlightPage frontmatter={ remarkPluginFrontmatter } headings={headings} hasSidebar={hasSidebar}>
	<div class:list={classes}>
		<Content />
	</div>
</StarlightPage>
