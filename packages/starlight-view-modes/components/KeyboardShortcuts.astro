---
import type { Shortcut } from "../libs/shortcuts";

interface Props {
  shortcuts: Shortcut[];
}

const { shortcuts } = Astro.props;
---

{
  shortcuts.map((shortcut) => (
    <>
      <kbd class="sl-hidden md:sl-flex" style="display: none;">
        {shortcut.ctrl && <kbd>Ctrl</kbd>}
        {shortcut.shift && <kbd>⇧</kbd>}
        {shortcut.alt && <kbd>Alt</kbd>}
        <kbd>{shortcut.keys.map((k) => k.toUpperCase()).join("+")}</kbd>
      </kbd>
    </>
  ))
}

{
  /**
   * This is intentionally inlined to avoid briefly showing an invalid shortcut.
   * Purposely using the deprecated `navigator.platform` property to detect Apple devices, as the
   * user agent is spoofed by some browsers when opening the devtools.
   */
}
<script is:inline>
  (() => {
    const shortcuts = document.querySelectorAll("kbd:has(kbd)");
    for (const shortcut of shortcuts) {
      if (!(shortcut instanceof HTMLElement)) return;
      const platformKeys = shortcut.querySelectorAll("kbd");
      for (const platformKey of platformKeys) {
        if (platformKey && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform)) {
          platformKey.textContent = platformKey.textContent
            .replace("Ctrl", "⌘")
            .replace("Alt", "⌥");
        }
      }
      shortcut.style.display = "";
    }
  })();
</script>

<style>
  kbd:has(kbd) {
    border-radius: 0.25rem;
    font-size: var(--sl-text-2xs);
    padding-inline: 0.375rem;
    gap: 0.25em;
    background-color: var(--sl-color-gray-6);
  }
  kbd {
    font-family: var(--__sl-font);
  }
</style>
